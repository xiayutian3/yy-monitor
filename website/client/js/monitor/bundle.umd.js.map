{"version":3,"file":"bundle.umd.js","sources":["../../../../sdk/perf.js","../../../../sdk/behavior.js","../../../../sdk/index.js"],"sourcesContent":["\r\n//性能统计\r\n\r\nexport default {\r\n  init: (cb) => {\r\n    // cb();\r\n\r\n    let isDOMReady = false;\r\n    let isOnload = false;\r\n    let cycleTime = 100;  //这个时间可以延长一点，1 、2 、3s，不影响数据\r\n\r\n    // 过滤无效数据；\r\n    function filterTime(a, b) {\r\n      return (a > 0 && b > 0 && (a - b) >= 0) ? (a - b) : undefined;\r\n    }\r\n\r\n    let Util = {\r\n      getPerfData: (p) => {\r\n\r\n        // let data = {\r\n        //   //网络建连\r\n        //   prevPage: p.fetchStart - p.navigationStart, //上一个页面的时间\r\n        //   redirect: p.redirectEnd - p.redirectStart, //重定向时间\r\n        //   dns: p.domainLookupEnd - p.domainLookupStart,//DNS查找时间\r\n        //   connect: p.connectEnd - p.connectStart,//TCP建连时间\r\n        //   network: p.connectEnd - p.navigationStart, //网络总耗时\r\n\r\n        //   //网络接收\r\n        //   send: p.responseStart - p.requestStart, //前端从发送到接受的时间\r\n        //   receive: p.responseEnd - p.responseStart, //接受数据用时\r\n        //   request: p.responseEnd - p.requestStart,  //请求页面的总耗时\r\n\r\n\r\n        //   //前端渲染\r\n        //   dom: p.domComplete - p.domLoading,  // dom解析时间\r\n        //   loadEvent: p.loadEventEnd - p.loadEventStart, // loadEvent时间\r\n        //   frontend: p.loadEventEnd - p.domLoading, //前端总时间\r\n\r\n        //   //关键阶段\r\n        //   load: p.loadEventEnd - p.navigationStart, //页面完全加载的时间\r\n        //   domReady: p.domContentLoadedEventStart - p.navigationStart, //dom准备好时间\r\n        //   interactive: p.domInteractive - p.navigationStart, //可操作时间\r\n        //   ttfb: p.responseStart - p.navigationStart, //首字节时间\r\n        // }\r\n\r\n\r\n        //过滤无效数据\r\n\r\n        let data = {\r\n          //网络建连\r\n          prevPage: filterTime(p.fetchStart, p.navigationStart), //上一个页面的时间\r\n          redirect: filterTime(p.redirectEnd, p.redirectStart), //重定向时间\r\n          dns: filterTime(p.domainLookupEnd, p.domainLookupStart),//DNS查找时间\r\n          connect: filterTime(p.connectEnd, p.connectStart),//TCP建连时间\r\n          network: filterTime(p.connectEnd, p.navigationStart), //网络总耗时\r\n\r\n          //网络接收\r\n          send: filterTime(p.responseStart, p.requestStart), //前端从发送到接受的时间\r\n          receive: filterTime(p.responseEnd, p.responseStart), //接受数据用时\r\n          request: filterTime(p.responseEnd, p.requestStart),  //请求页面的总耗时\r\n\r\n\r\n          //前端渲染\r\n          dom: filterTime(p.domComplete, p.domLoading),  // dom解析时间\r\n          loadEvent: filterTime(p.loadEventEnd, p.loadEventStart), // loadEvent时间\r\n          frontend: filterTime(p.loadEventEnd, p.domLoading), //前端总时间\r\n\r\n          //关键阶段\r\n          load: filterTime(p.loadEventEnd, p.navigationStart), //页面完全加载的时间\r\n          domReady: filterTime(p.domContentLoadedEventStart, p.navigationStart), //dom准备好时间\r\n          interactive: filterTime(p.domInteractive, p.navigationStart), //可操作时间\r\n          ttfb: filterTime(p.responseStart, p.navigationStart), //首字节时间\r\n        }\r\n        return data;\r\n      },\r\n      //DOM解析完成\r\n      domready: (callback) => {\r\n        if (isDOMReady == true) return\r\n        let timer = null;\r\n\r\n        let runCheck = () => {\r\n          if (performance.timing.domComplete) {\r\n            //1.停止循环检测，2.运行callback\r\n            clearTimeout(timer)\r\n            callback()\r\n            isDOMReady = true\r\n          } else {\r\n            //再去循环检测\r\n            timer = setTimeout(runCheck, cycleTime)\r\n          }\r\n        }\r\n\r\n        if (document.readyState == 'interactive') {\r\n          callback()\r\n          return;\r\n        }\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n          //开始循环检测，是否 DOMContentLoaded 已经完成\r\n          runCheck()\r\n        })\r\n      },\r\n      //页面加载完成\r\n      onload: (callback) => {\r\n        if (isOnload == true) return\r\n        let timer = null;\r\n\r\n        let runCheck = () => {\r\n          if (performance.timing.loadEventEnd) {\r\n            //1.停止循环检测，2.运行callback\r\n            clearTimeout(timer)\r\n            callback()\r\n            isOnload = true\r\n          } else {\r\n            //再去循环检测\r\n            timer = setTimeout(runCheck, cycleTime)\r\n          }\r\n        }\r\n\r\n        if (document.readyState == 'complete') {\r\n          callback()\r\n          return;\r\n        }\r\n        window.addEventListener('load', () => {\r\n          //开始循环检测，是否 load 已经完成\r\n          runCheck()\r\n        }, false)\r\n\r\n      }\r\n    }\r\n    let performance = window.performance;\r\n\r\n    Util.domready(() => {\r\n      let perfData = Util.getPerfData(performance.timing)\r\n      // console.log('perfData', perfData)\r\n      perfData.type = 'domready'\r\n      // 获取到数据应该给sdk上层 去上传这个数据\r\n      // debugger\r\n      cb(perfData)\r\n    })\r\n    Util.onload(() => {\r\n      let perfData = Util.getPerfData(performance.timing)\r\n      // console.log('perfData', perfData)\r\n      perfData.type = 'onload'\r\n      // 获取到数据应该给sdk上层 去上传这个数据\r\n      // debugger\r\n      cb(perfData)\r\n    })\r\n\r\n\r\n    // document.addEventListener('DOMContentLoaded',()=>{\r\n    //   //DOMContentLoaded事件也会存在同样的问题，所以也要加settimeout\r\n    //   // let perfData = Util.getPerfData(performance.timing)\r\n    //   // debugger\r\n    // })\r\n\r\n    // window.addEventListener('load', () => {\r\n    //   //获取的结果会不一样 所以会加settimeout，不然某些值会出现负数\r\n    //   // let perfData = Util.getPerfData(performance.timing)\r\n    //   // debugger\r\n\r\n    //   setTimeout(() => {\r\n    //     console.log('performance: ', performance.timing);\r\n    //     let perfData = Util.getPerfData(performance.timing)\r\n    //     debugger\r\n    //   }, 100)\r\n    // })\r\n  }\r\n}","//用户的行为路径记录\r\n// xpath: /html/body/ul[1]/li[1]  xpath 的下标没有0 ，从1开始的 \r\n\r\n//\r\nlet getIndex = (ele) => {\r\n  let children = [].slice.call(ele.parentNode.children);\r\n  let myIndex = null\r\n  let len = children.length;\r\n\r\n  //只获取种类相同的元素\r\n  children = children.filter(node => node.tagName === ele.tagName)\r\n\r\n  for (let i = 0; i < len; i++) {\r\n    if (ele === children[i]) {\r\n      myIndex = i;\r\n    }\r\n  }\r\n  // xpath 的下标没有0 ，从1开始的  返回结果 [1]\r\n  myIndex = `[${myIndex + 1}]`;\r\n  let tagName = ele.tagName.toLowerCase();\r\n  let myLabel = tagName + myIndex\r\n  return myLabel\r\n\r\n}\r\nlet getXpath = (ele) => {\r\n\r\n  //边界条件，不需要获取\r\n  //点击的是不是元素\r\n  if (!(ele instanceof Element)) {\r\n    return void 0;\r\n  }\r\n\r\n  //点击是不是文本\r\n  if (ele.nodeType !== 1) {\r\n    return void 0;\r\n  }\r\n\r\n  //是不是点击了body\r\n  let rootElement = document.body;\r\n  if (ele === rootElement) {\r\n    return void 0;\r\n  }\r\n\r\n\r\n  let xpath = ''\r\n  let currentEle = ele\r\n  while (currentEle !== document.body) {\r\n    xpath = getIndex(currentEle) + '/' + xpath;\r\n    debugger\r\n    currentEle = currentEle.parentNode\r\n  }\r\n  debugger\r\n}\r\n\r\nexport default {\r\n  init: (cb) => {\r\n    document.addEventListener('click', (e) => {\r\n      let target = e.target\r\n      let xpath = getXpath(target)\r\n\r\n    }, false)\r\n\r\n    cb()\r\n  }\r\n}","import perf from './perf'\r\nimport resource from './resource'\r\nimport errorCatch from './errorCatch'\r\nimport xhrHook from './xhrHook'\r\nimport behavior from './behavior'\r\n\r\n\r\n//性能指标\r\nperf.init((perfData)=>{\r\n  //performance timing\r\n  console.log('perfData: ', perfData);\r\n  // console.log('perf init')\r\n})\r\n\r\n//资源监控\r\n// resource.init((resource)=>{\r\n//   console.log('resource: ', resource);\r\n// })\r\n\r\n//请求监控\r\n// console.log('xhrHook: ', xhrHook);\r\n// xhrHook.init((infoData)=>{\r\n//   console.log('infoData: ', infoData);\r\n// })\r\n\r\n// //错误捕获\r\n// errorCatch.init((errorInfo)=>{\r\n//   console.log('errorInfo',errorInfo)\r\n// })\r\n\r\n//用户的行为路径记录\r\nbehavior.init((behaviorPath)=>{\r\n  console.log('behaviorPath: ', behaviorPath);\r\n})\r\n\r\n\r\n//上报的方式 35字节 1x1的gif  大概形式\r\n// new Image(`http://akhdskjfh.gif?type=error&data=JSON.stringify(${infoData})`)"],"names":["init","cb","isDOMReady","isOnload","cycleTime","filterTime","a","b","undefined","Util","getPerfData","p","data","prevPage","fetchStart","navigationStart","redirect","redirectEnd","redirectStart","dns","domainLookupEnd","domainLookupStart","connect","connectEnd","connectStart","network","send","responseStart","requestStart","receive","responseEnd","request","dom","domComplete","domLoading","loadEvent","loadEventEnd","loadEventStart","frontend","load","domReady","domContentLoadedEventStart","interactive","domInteractive","ttfb","domready","callback","timer","runCheck","performance","timing","clearTimeout","setTimeout","document","readyState","addEventListener","onload","window","perfData","type","getIndex","ele","children","slice","call","parentNode","myIndex","len","length","filter","node","tagName","i","toLowerCase","myLabel","getXpath","Element","nodeType","rootElement","body","xpath","currentEle","e","target","perf","console","log","behavior","behaviorPath"],"mappings":"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"}